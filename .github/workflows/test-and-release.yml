# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
  push:
    branches:
      - master
    tags:
      # normal versions
      - "v?[0-9]+.[0-9]+.[0-9]+"
      # pre-releases
      - "v?[0-9]+.[0-9]+.[0-9]+-**"
  pull_request: {}

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: npm i

  # Performs quick checks before the expensive test runs
  check-and-lint:
      if: contains(github.event.head_commit.message, '[skip ci]') == false

      runs-on: ubuntu-latest

      strategy:
          matrix:
              node-version: [20.x]

      steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Use Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v3
            with:
                node-version: ${{ matrix.node-version }}

          - name: Install Dependencies
            run: npm ci

          - name: Lint source code
            run: npm run lint
          - name: Test package files
            run: npm run test:package

  # Runs adapter tests on all supported node versions and OSes
  adapter-tests:
    if: contains(github.event.head_commit.message, '[skip ci]') == false

    needs: [build]

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Run local tests
        run: npm test
#      - name: Run unit tests
#        run: npm run test:unit
#      - name: Run integration tests # (linux/osx)
#        if: startsWith(runner.OS, 'windows') == false
#        run: DEBUG=testing:* npm run test:integration
#      - name: Run integration tests # (windows)
#        if: startsWith(runner.OS, 'windows')
#        run: set DEBUG=testing:* & npm run test:integration
